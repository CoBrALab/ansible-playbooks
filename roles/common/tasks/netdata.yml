---
# install netdata on node
- name: Download the installation script
  get_url:
    url: https://my-netdata.io/kickstart.sh
    dest: /tmp/kickstart.sh
    mode: +x

- name: Install Netdata
  command: /tmp/kickstart.sh --dont-wait
  args:
    creates: /etc/netdata

- name: Cleanup installation script
  file:
    path: /tmp/kickstart.sh
    state: absent

- name: Set hostname variable
  set_fact:
    hostname: "{{ ansible_facts['ansible_hostname'] }}"
      
# configure netdata
- template:
    src: ../templates/netdata.conf.j2
    dest: /etc/netdata/netdata.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  notify: Restart Netdata
  become: true

#claim node and add it to netdata cloud
- name: Claim to Netdata Cloud
  block:

  - name: Claim to Netdata Cloud if not already
    shell:
      cmd: netdata-claim.sh -token={{ claim_token }} -rooms={{ claim_rooms }} -url={{ claim_url }}
      creates: /var/lib/netdata/cloud.d/claimed_id
    become: yes
  when: reclaim == false

- name: Re-claim a node to Netdata Cloud
  block:

  - name: Ensure `uuid-runtime` is installed
    apt:
      name: uuid-runtime
      state: present
    become: true
    
  - name: Reclaim the node with `-id=`
    shell: netdata-claim.sh -token={{ claim_token }} -rooms={{ claim_rooms }} -url={{ claim_url }} -id=$(uuidgen)
    when: uuidgen_result.stat.exists == true
    notify: Restart Netdata
    become: yes
    when: reclaim == true

# copy custom health checks
- name: Copy apcupdsd_last_collect health check
  copy: src=files/netdata-apcupsd.conf dest=/etc/netdata/health.d/apcupsd.conf
  notify: Restart Netdata
